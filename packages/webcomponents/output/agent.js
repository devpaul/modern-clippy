!function(t){var e={};function n(o){if(e[o])return e[o].exports;var r=e[o]={i:o,l:!1,exports:{}};return t[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=t,n.c=e,n.d=function(t,e,o){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:o})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var r in t)n.d(o,r,function(e){return t[e]}.bind(null,r));return o},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=1)}([function(t,e,n){"use strict";(function(t){const n="undefined"!=typeof self?self:"undefined"!=typeof window?window:void 0!==t?t:void 0;e.a=n}).call(this,n(4))},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const o=n(2);customElements.define("modern-agent",o.Agent),e.default=o.Agent},function(t,e,n){"use strict";var o=this&&this.__awaiter||function(t,e,n,o){return new(n||(n=Promise))(function(r,i){function a(t){try{s(o.next(t))}catch(t){i(t)}}function l(t){try{s(o.throw(t))}catch(t){i(t)}}function s(t){t.done?r(t.value):new n(function(e){e(t.value)}).then(a,l)}s((o=o.apply(t,e||[])).next())})};Object.defineProperty(e,"__esModule",{value:!0});const r=n(9),i=n(3),a=n(5),l=n(6);function s(t){return null!=t?`${t}px`:null}e.Agent=class extends HTMLElement{constructor(){super(),this._mute=!1;const t=this.attachShadow({mode:"open"});t.appendChild(l.loadStyles()),t.appendChild(l.loadTemplate());const e=this._speech.querySelector("slot");e&&e.addEventListener("slotchange",t=>{this._onSlotChange(t)})}static get observedAttributes(){return["bundle","mute","dialog"]}get actions(){return Object.keys(this._config.animations)}get current(){return this._control&&this._control.action}attributeChangedCallback(t,e,n){switch(t){case"bundle":this.load(n);break;case"mute":this._mute="true"===n;break;case"dialog":const e=n?a.transformRelativePosition(n.split(",")):void 0;this._refreshDialogPlacement(e)}}load(t){return o(this,void 0,void 0,function*(){if("string"==typeof t){console.log(`loading ${t} bundle`);const e=yield fetch(t);t=yield e.json()}for(t.license&&(console.log("==========================================================="),console.log("BUNDLE LICENSE"),console.log(t.license),console.log("===========================================================")),this._config=t;this._overlays.firstChild;)this._overlays.removeChild(this._overlays.firstChild);for(let e=t.overlayCount;e>0;e--)this._createOverlay();this._overlays.style.height=s(t.frameSize.height),this._overlays.style.width=s(t.frameSize.width),this.resetDialogPosition(),this._soundBoard=yield i.default.load(t.soundPack),this.play("Show"),this.dispatchEvent(new CustomEvent("loaded"))})}play(t){const e=this._config.animations[t];if(!e)throw new Error(`Action ${t} does not exist`);this._control&&this._control.stopImmediately(),this.dispatchEvent(new CustomEvent("actionStart",{detail:{action:t}}));let n=0;return this._control=Object.assign({action:t},r.animator(e,e=>{const{images:o=[]}=e;this._setFrames(o);for(let t=o.length;t<this._config.overlayCount;t++)this._hideFrame(t);!this._mute&&e.sound&&this._soundBoard.play(String(e.sound)),this.dispatchEvent(new CustomEvent("frame",{detail:{action:t,frame:e,time:n}})),n+=e.duration})),this._control.done.finally(()=>{this.dispatchEvent(new CustomEvent("actionEnd",{detail:{action:t}})),this._control=void 0}),this._control}playIdle(){const t=this.actions.filter(t=>"Idle"===t.substr(0,4));this.play(t[Math.floor(Math.random()*t.length)])}resetDialogPosition(){const t=this.getAttribute("dialog"),e=t&&a.transformRelativePosition(t.split(","))||void 0;this._refreshDialogPlacement(e)}stop(){this._control&&this._control.stop()}stopImmediately(){this._control&&this._control.stopImmediately()}get _overlays(){return this.shadowRoot.querySelector("#overlays")}get _speech(){return this.shadowRoot.querySelector("#speech")}_createOverlay(){const{characterMap:t,frameSize:{width:e,height:n}}=this._config,o=document.createElement("div");o.style.width=s(e),o.style.height=s(n),o.style.backgroundImage=`url(${t})`,o.style.display="none",this._overlays.appendChild(o)}_hideFrame(t=0){const e=this._overlays.children[t];e&&(e.style.display="none")}_onSlotChange(t){const e=t.target;this._speech.style.visibility=e.assignedElements().length?"visible":"hidden"}_refreshDialogPlacement(t){const e=this._speech,n={height:e.clientHeight||100,width:e.clientWidth||100},o=t&&t.length?a.choosePosition(this,n,t)||t[0]:a.choosePosition(this,n)||"top",r=a.getPosition(o,this._config.frameSize);this._setDialogPosition(r)}_setDialogPosition(t){const e=this._speech;e.classList.remove("left","right","top","bottom"),e.classList.add(t.placement),e.style.top=s(t.top),e.style.bottom=s(t.bottom),e.style.left=s(t.left),e.style.right=s(t.right)}_setFrame(t,e,n=0){const{width:o,height:r}=this._config.frameSize,i=this._overlays.children[n];if(t%o==0&&e%r==0||console.warn(`frame ${t},${e} is not a multiple of frame size ${o},${r}`),!i)throw new Error(`Missing overlay ${n}`);i.style.display="block",i.style.backgroundPositionX=s(-t),i.style.backgroundPositionY=s(-e),i.style.position="absolute",i.style.top="0",i.style.left="0"}_setFrames(t){if(t)for(let e=0;e<t.length;e++){const[n,o]=t[e];this._setFrame(n,o,e)}}}},function(t,e,n){"use strict";n.r(e),n.d(e,"SoundBoard",function(){return s}),n.d(e,"CoreAudio",function(){return c});var o=n(0),r=function(t,e,n,o){return new(n||(n=Promise))(function(r,i){function a(t){try{s(o.next(t))}catch(t){i(t)}}function l(t){try{s(o.throw(t))}catch(t){i(t)}}function s(t){t.done?r(t.value):new n(function(e){e(t.value)}).then(a,l)}s((o=o.apply(t,e||[])).next())})};const i=o.a.AudioContext||o.a.webkitAudioContext,a=new Map([["mp3","audio/mpeg"],["ogg","audio/ogg"]]),l=document.createElement("audio");class s{constructor(t,e){this.context=t,this.effects=e}play(t){const e=this.effects[t];if(e){"suspended"===this.context.state&&this.context.resume();const t=this.context.createBufferSource();t.buffer=e,t.connect(this.context.destination),t.start()}else console.warn(`Soundboard missing effect for ${t}`)}}class c{constructor(t=new i){this.context=t}get suspended(){return"suspended"===this.context.state}resume(){this.context.resume()}load(t){return r(this,void 0,void 0,function*(){const e={};return Object.keys(t).forEach(n=>r(this,void 0,void 0,function*(){const o=t[n];this.canPlay(n)&&(console.log("loading "+n),yield this.loadSoundPack(e,o))})),new s(this.context,e)})}loadSound(t){return r(this,void 0,void 0,function*(){const e=yield fetch(t),n=yield e.arrayBuffer();return this.context.decodeAudioData(n)})}canPlay(t){const e=a.get(t)||t;return l.canPlayType(e)}loadSoundPack(t,e){return Promise.all(Object.keys(e).map(n=>r(this,void 0,void 0,function*(){if(!t[n])try{t[n]=yield this.loadSound(e[n])}catch(t){console.warn(`failed to load audio ${n}`)}})))}}e.default=new c},function(t,e){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(t){"object"==typeof window&&(n=window)}t.exports=n},function(t,e,n){"use strict";function o(t){return"left"===t||"right"===t||"top"===t||"bottom"===t}function r(t){return t.reduce((t,e)=>(o(e)?t.push(e):"vertical"===e?(t.push("top"),t.push("bottom")):"horizontal"!==e&&"side"!==e||(t.push("left"),t.push("right")),t),[])}Object.defineProperty(e,"__esModule",{value:!0}),e.isRelativePosition=o,e.transformRelativePosition=r,e.choosePosition=function(t,e,n=["left","right","top","bottom"]){const{height:o,width:i}=e,a=function(t){const e=t.getBoundingClientRect(),n=window.innerHeight,o=window.innerWidth;return{top:e.top,left:e.left,right:o-e.right,bottom:n-e.bottom}}(t),l=r(n);for(let t of l)switch(t){case"top":if(a.top>o)return"top";break;case"bottom":if(a.bottom>o)return"bottom";break;case"left":if(a.left>i)return"left";break;case"right":if(a.right>i)return"right"}},e.getPosition=function(t,e){switch(t){case"right":return function(t){return{placement:"right",top:0,left:Math.floor(.75*t.width)}}(e);case"bottom":return function(t){return{placement:"bottom",top:Math.floor(t.height)}}(e);case"top":return function(t){return{placement:"top",bottom:Math.floor(.75*t.height)}}(e);default:return function(t){return{placement:"left",top:0,right:Math.floor(.75*t.width)}}(e)}}},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const o=n(7).default,r=n(8);function i(t,e){if(null==t)throw new Error(e);return t}e.loadTemplate=function(){const t=document.createElement("template");t.innerHTML=r;const e=t.content.cloneNode(!0);return i(e.querySelector("#overlays"),"missing overlay container"),i(e.querySelector("#speech"),"missing speech container"),i(e.querySelector("slot"),"missing slot"),e},e.loadStyles=function(){const t=document.createElement("style");return t.textContent=o,t}},function(t,e,n){"use strict";n.r(e),e.default=':host {\n\t--bg-color: #FFC;\n\t--border-color: black;\n\t--text-color: #333;\n\t--triangle-height: 13px;\n\t--triangle-base: 26px;\n\t--triangle-placement: 40px;\n\t--triangle-vertical-placement: 10px;\n\t--triangle-border: 1px;\n\t--speech-min-width: 40px;\n\t--speech-min-height: 40px;\n\t--speech-width: auto;\n}\n\n.root {\n\tposition: relative;\n}\n\n#overlays {\n\tposition: relative;\n}\n\n#overlays > * {\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n}\n\n/* =========================================================================================================\n * SPEECH BUBBLE\n*/\n\n#speech {\n\tvisibility: hidden;\n\tposition: absolute;\n\tdisplay: block;\n\tz-index: 1000;\n\tmin-width: var(--speech-min-width);\n\tmin-height: var(--speech-min-height);\n\twidth: var(--speech-width);\n}\n\n.bubble {\n\tposition: relative;\n\tpadding: 15px;\n\tmargin: 1em 0 3em;\n\tborder: var(--triangle-border) solid var(--border-color);\n\tcolor: var(--text-color);\n\tbackground: var(--bg-color);\n\tborder-radius: 10px;\n}\n\n/* TOP DIALOG (bottom triangle) */\n\n/* outer triangle border */\n.top.bubble:before {\n\tcontent: "";\n\tposition: absolute;\n\tbottom: calc(-1 * (var(--triangle-height) + var(--triangle-border)));\n\tleft: var(--triangle-placement);\n\tborder-width: calc(var(--triangle-height) + var(--triangle-border)) calc(var(--triangle-border) + var(--triangle-base) / 2) 0;\n\tborder-style: solid;\n\tborder-color: var(--border-color) transparent;\n}\n\n/* creates the smaller triangle */\n.top.bubble:after {\n\tcontent: "";\n\tposition: absolute;\n\tbottom: calc(-1 * var(--triangle-height));\n\tleft: calc(var(--triangle-placement) + var(--triangle-border));\n\tborder-width: var(--triangle-height) calc(var(--triangle-base) / 2) 0;\n\tborder-style: solid;\n\tborder-color: var(--bg-color) transparent;\n}\n\n/* RIGHT DIALOG (left triangle) */\n\n.right.bubble:before {\n\tcontent: "";\n\tposition: absolute;\n\ttop: var(--triangle-vertical-placement);\n\tleft: calc(-1 * (var(--triangle-height) + var(--triangle-border)));\n\tborder-width: calc(var(--triangle-border) + var(--triangle-base) / 2) calc(var(--triangle-height) + var(--triangle-border)) calc(var(--triangle-border) + var(--triangle-base) / 2) 0;\n\tborder-style: solid;\n\tborder-color: transparent var(--border-color) transparent;\n}\n\n.right.bubble:after {\n\tcontent: "";\n\tposition: absolute;\n\ttop: calc(var(--triangle-vertical-placement) + var(--triangle-border));\n\tleft: calc(-1 * var(--triangle-height));\n\tborder-width: 50px 145px 50px 0;\n\tborder-width: calc(var(--triangle-base) / 2) var(--triangle-height) calc(var(--triangle-base) / 2) 0;\n\tborder-style: solid;\n\tborder-color: transparent var(--bg-color) transparent;\n}\n\n/* LEFT DIALOG (right triangle) */\n\n.left.bubble:before {\n\tcontent: "";\n\tposition: absolute;\n\ttop: var(--triangle-vertical-placement);\n\tright: calc(-1 * (var(--triangle-height) + var(--triangle-border)));\n\tborder-width: calc(var(--triangle-border) + var(--triangle-base) / 2) 0 calc(var(--triangle-border) + var(--triangle-base) / 2) calc(var(--triangle-height) + var(--triangle-border));\n\tborder-style: solid;\n\tborder-color: transparent var(--border-color) transparent;\n}\n\n.left.bubble:after {\n\tcontent: "";\n\tposition: absolute;\n\ttop: calc(var(--triangle-vertical-placement) + var(--triangle-border));\n\tright: calc(-1 * var(--triangle-height));\n\tborder-width: 50px 145px 50px 0;\n\tborder-width: calc(var(--triangle-base) / 2) 0 calc(var(--triangle-base) / 2) var(--triangle-height);\n\tborder-style: solid;\n\tborder-color: transparent var(--bg-color) transparent;\n}\n\n/* BOTTOM DIALOG (top triangle) */\n\n/* outer triangle border */\n.bottom.bubble:before {\n\tcontent: "";\n\tposition: absolute;\n\ttop: calc(-1 * (var(--triangle-height) + var(--triangle-border)));\n\tleft: var(--triangle-placement);\n\tborder-width: 0 calc(var(--triangle-border) + var(--triangle-base) / 2) calc(var(--triangle-height) + var(--triangle-border));\n\tborder-style: solid;\n\tborder-color: var(--border-color) transparent;\n}\n\n/* creates the smaller triangle */\n.bottom.bubble:after {\n\tcontent: "";\n\tposition: absolute;\n\ttop: calc(-1 * var(--triangle-height));\n\tleft: calc(var(--triangle-placement) + var(--triangle-border));\n\tborder-width: 0 calc(var(--triangle-base) / 2) var(--triangle-height);\n\tborder-style: solid;\n\tborder-color: var(--bg-color) transparent;\n}\n'},function(t,e){t.exports='<div class=root> <div id=speech class="bubble left"> <slot name=""> </slot> </div> <div id=overlays> </div> </div> '},function(t,e,n){"use strict";function o(t){return new Promise(e=>{setTimeout(e,t)})}n.r(e),n.d(e,"stepper",function(){return a}),n.d(e,"animator",function(){return l});var r=function(t,e,n,o){return new(n||(n=Promise))(function(r,i){function a(t){try{s(o.next(t))}catch(t){i(t)}}function l(t){try{s(o.throw(t))}catch(t){i(t)}}function s(t){t.done?r(t.value):new n(function(e){e(t.value)}).then(a,l)}s((o=o.apply(t,e||[])).next())})};function i(t){let e=100*Math.random();for(const n of t)if((e-=n.weight)<=0)return n.frameIndex}function*a(t){let e=0,n=t.frames,o=!1;for(;e<n.length;){let t=n[e];(o=!!(yield t)||o)&&t.exitBranch?e=t.exitBranch:t.branching?e=i(t.branching.branches)||e+1:e++}}function l(t,e){const n=a(t);let i,l=!1,s=!1;const c=Promise.race([(()=>r(this,void 0,void 0,function*(){for(let{done:t,value:r}=n.next(l);!s&&!t;({done:t,value:r}=n.next(l)))e(r),yield o(r.duration)}))(),new Promise(t=>{i=t})]);return{done:c,stop:()=>(l=!0,c),stopImmediately(){s=!0,i()}}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4uL2NvbW1vbi9vdXRwdXQvZXNtL3V0aWwvZ2xvYmFsLmpzIiwid2VicGFjazovLy8uL3NyYy9pbmRleC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvYWdlbnQudHMiLCJ3ZWJwYWNrOi8vLy4uL2NvbW1vbi9vdXRwdXQvZXNtL2NvcmVBdWRpby5qcyIsIndlYnBhY2s6Ly8vKHdlYnBhY2spL2J1aWxkaW4vZ2xvYmFsLmpzIiwid2VicGFjazovLy8uL3NyYy9kaWFsb2cudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3RlbXBsYXRlLnRzIiwid2VicGFjazovLy8uL3NyYy9hZ2VudC5jc3MiLCJ3ZWJwYWNrOi8vLy4vc3JjL2FnZW50Lmh0bWwiLCJ3ZWJwYWNrOi8vLy4uL2NvbW1vbi9vdXRwdXQvZXNtL3V0aWwvc2xlZXAuanMiLCJ3ZWJwYWNrOi8vLy4uL2NvbW1vbi9vdXRwdXQvZXNtL2FuaW1hdG9yLmpzIl0sIm5hbWVzIjpbImluc3RhbGxlZE1vZHVsZXMiLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJleHBvcnRzIiwibW9kdWxlIiwiaSIsImwiLCJtb2R1bGVzIiwiY2FsbCIsIm0iLCJjIiwiZCIsIm5hbWUiLCJnZXR0ZXIiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiciIsIlN5bWJvbCIsInRvU3RyaW5nVGFnIiwidmFsdWUiLCJ0IiwibW9kZSIsIl9fZXNNb2R1bGUiLCJucyIsImNyZWF0ZSIsImtleSIsImJpbmQiLCJuIiwib2JqZWN0IiwicHJvcGVydHkiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsInAiLCJzIiwiZ2xvYmFsIiwiZ2xvYmFsT2JqZWN0Iiwic2VsZiIsIndpbmRvdyIsIl9fd2VicGFja19leHBvcnRzX18iLCJhZ2VudF8xIiwiY3VzdG9tRWxlbWVudHMiLCJkZWZpbmUiLCJBZ2VudCIsImRlZmF1bHQiLCJhbmltYXRvcl8xIiwiY29yZUF1ZGlvXzEiLCJkaWFsb2dfMSIsInRlbXBsYXRlXzEiLCJjc3NQeCIsInBvcyIsIkhUTUxFbGVtZW50IiwiW29iamVjdCBPYmplY3RdIiwic3VwZXIiLCJ0aGlzIiwiX211dGUiLCJzaGFkb3ciLCJhdHRhY2hTaGFkb3ciLCJhcHBlbmRDaGlsZCIsImxvYWRTdHlsZXMiLCJsb2FkVGVtcGxhdGUiLCJzcGVlY2hTbG90IiwiX3NwZWVjaCIsInF1ZXJ5U2VsZWN0b3IiLCJhZGRFdmVudExpc3RlbmVyIiwiZXZlbnQiLCJfb25TbG90Q2hhbmdlIiwib2JzZXJ2ZWRBdHRyaWJ1dGVzIiwiYWN0aW9ucyIsImtleXMiLCJfY29uZmlnIiwiYW5pbWF0aW9ucyIsImN1cnJlbnQiLCJfY29udHJvbCIsImFjdGlvbiIsIl9vbGRWYWx1ZSIsIm5ld1ZhbHVlIiwibG9hZCIsInBsYWNlbWVudCIsInRyYW5zZm9ybVJlbGF0aXZlUG9zaXRpb24iLCJzcGxpdCIsInVuZGVmaW5lZCIsIl9yZWZyZXNoRGlhbG9nUGxhY2VtZW50IiwiY29uZmlnIiwiY29uc29sZSIsImxvZyIsInJlc3VsdCIsImZldGNoIiwianNvbiIsImxpY2Vuc2UiLCJfb3ZlcmxheXMiLCJmaXJzdENoaWxkIiwicmVtb3ZlQ2hpbGQiLCJvdmVybGF5Q291bnQiLCJfY3JlYXRlT3ZlcmxheSIsInN0eWxlIiwiaGVpZ2h0IiwiZnJhbWVTaXplIiwid2lkdGgiLCJyZXNldERpYWxvZ1Bvc2l0aW9uIiwiX3NvdW5kQm9hcmQiLCJzb3VuZFBhY2siLCJwbGF5IiwiZGlzcGF0Y2hFdmVudCIsIkN1c3RvbUV2ZW50IiwiYW5pbWF0aW9uIiwiRXJyb3IiLCJzdG9wSW1tZWRpYXRlbHkiLCJkZXRhaWwiLCJ0aW1lIiwiYXNzaWduIiwiYW5pbWF0b3IiLCJmcmFtZSIsImltYWdlcyIsIl9zZXRGcmFtZXMiLCJsZW5ndGgiLCJfaGlkZUZyYW1lIiwic291bmQiLCJTdHJpbmciLCJkdXJhdGlvbiIsImRvbmUiLCJmaW5hbGx5IiwiaWRsZUFjdGlvbnMiLCJmaWx0ZXIiLCJzdWJzdHIiLCJNYXRoIiwiZmxvb3IiLCJyYW5kb20iLCJhdHRyaWJ1dGVWYWx1ZSIsImdldEF0dHJpYnV0ZSIsInN0b3AiLCJzaGFkb3dSb290IiwiY2hhcmFjdGVyTWFwIiwib3ZlcmxheSIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsImJhY2tncm91bmRJbWFnZSIsImRpc3BsYXkiLCJub2RlIiwiY2hpbGRyZW4iLCJzbG90IiwidGFyZ2V0IiwidmlzaWJpbGl0eSIsImFzc2lnbmVkRWxlbWVudHMiLCJkaWFsb2ciLCJkaWFsb2dTcGFjZSIsImNsaWVudEhlaWdodCIsImNsaWVudFdpZHRoIiwicmVsYXRpdmUiLCJjaG9vc2VQb3NpdGlvbiIsInBvc2l0aW9uIiwiZ2V0UG9zaXRpb24iLCJfc2V0RGlhbG9nUG9zaXRpb24iLCJzcGVlY2giLCJjbGFzc0xpc3QiLCJyZW1vdmUiLCJhZGQiLCJ0b3AiLCJib3R0b20iLCJsZWZ0IiwicmlnaHQiLCJ4IiwieSIsIndhcm4iLCJiYWNrZ3JvdW5kUG9zaXRpb25YIiwiYmFja2dyb3VuZFBvc2l0aW9uWSIsIl9zZXRGcmFtZSIsIlNvdW5kQm9hcmQiLCJDb3JlQXVkaW8iLCJfdXRpbF9nbG9iYWxfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyIsIl9fYXdhaXRlciIsInRoaXNBcmciLCJfYXJndW1lbnRzIiwiUCIsImdlbmVyYXRvciIsIlByb21pc2UiLCJyZXNvbHZlIiwicmVqZWN0IiwiZnVsZmlsbGVkIiwic3RlcCIsIm5leHQiLCJlIiwicmVqZWN0ZWQiLCJ0aGVuIiwiYXBwbHkiLCJBdWRpb0NvbnRleHQiLCJ3ZWJraXRBdWRpb0NvbnRleHQiLCJtaW1lTWFwIiwiTWFwIiwiYXVkaW9UYWciLCJjb250ZXh0IiwiZWZmZWN0cyIsImJ1ZmZlciIsInN0YXRlIiwicmVzdW1lIiwic291cmNlIiwiY3JlYXRlQnVmZmVyU291cmNlIiwiY29ubmVjdCIsImRlc3RpbmF0aW9uIiwic3RhcnQiLCJzdXNwZW5kZWQiLCJmb3JFYWNoIiwidHlwZSIsInBhY2siLCJjYW5QbGF5IiwibG9hZFNvdW5kUGFjayIsInNyYyIsImRhdGEiLCJhcnJheUJ1ZmZlciIsImRlY29kZUF1ZGlvRGF0YSIsImZvcm1hdCIsIm1pbWV0eXBlIiwiY2FuUGxheVR5cGUiLCJhbGwiLCJtYXAiLCJpZCIsImxvYWRTb3VuZCIsImciLCJGdW5jdGlvbiIsImlzUmVsYXRpdmVQb3NpdGlvbiIsInJlZHVjZSIsImxpc3QiLCJwdXNoIiwicHJlZmVyZW5jZXMiLCJzcGFjZSIsImdlb21ldHJ5IiwiZ2V0Qm91bmRpbmdDbGllbnRSZWN0Iiwic2NyZWVuIiwiaW5uZXJIZWlnaHQiLCJpbm5lcldpZHRoIiwiY2FsY3VsYXRlQXZhaWxhYmxlU3BhY2UiLCJhZ2VudERpbWVuc2lvbnMiLCJjYWxjdWxhdGVSaWdodCIsImNhbGN1bGF0ZUJvdHRvbSIsImNhbGN1bGF0ZVRvcCIsImNhbGN1bGF0ZUxlZnQiLCJhZ2VudFN0eWxlIiwidGVtcGxhdGVTdHJpbmciLCJ0aHJvd0lmTnVsbCIsIm1lc3NhZ2UiLCJ0ZW1wbGF0ZSIsImlubmVySFRNTCIsInJvb3QiLCJjb250ZW50IiwiY2xvbmVOb2RlIiwidGV4dENvbnRlbnQiLCJzbGVlcCIsIm1pbGxpc2Vjb25kcyIsInNldFRpbWVvdXQiLCJzdGVwcGVyIiwicGlja1JhbmRvbSIsImJyYW5jaGVzIiwicGljayIsImJyYW5jaCIsIndlaWdodCIsImZyYW1lSW5kZXgiLCJvZmZzZXQiLCJmcmFtZXMiLCJleGl0IiwiZXhpdEJyYW5jaCIsImJyYW5jaGluZyIsImZyYW1lQ2FsbGJhY2siLCJpdGVyYXRvciIsImNhbGxJbW1lZGlhdGUiLCJpbW1lZGlhdGUiLCJyYWNlIl0sIm1hcHBpbmdzIjoiYUFDQSxJQUFBQSxFQUFBLEdBR0EsU0FBQUMsRUFBQUMsR0FHQSxHQUFBRixFQUFBRSxHQUNBLE9BQUFGLEVBQUFFLEdBQUFDLFFBR0EsSUFBQUMsRUFBQUosRUFBQUUsR0FBQSxDQUNBRyxFQUFBSCxFQUNB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LE1BR0EsT0FDQWtDLE9BQ0FVLEtBQUEsS0FDQWdJLEdBQUEsRUFDQTFJLEdBRUFwRSxrQkFDQW9OLEdBQUEsRUFDQUQiLCJmaWxlIjoiYWdlbnQuanMiLCJzb3VyY2VzQ29udGVudCI6WyIgXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG4gXHR2YXIgaW5zdGFsbGVkTW9kdWxlcyA9IHt9O1xuXG4gXHQvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXG4gXHRcdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuIFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSkge1xuIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuIFx0XHR9XG4gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbiBcdFx0XHRpOiBtb2R1bGVJZCxcbiBcdFx0XHRsOiBmYWxzZSxcbiBcdFx0XHRleHBvcnRzOiB7fVxuIFx0XHR9O1xuXG4gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuIFx0XHRtb2R1bGVzW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4gXHRcdG1vZHVsZS5sID0gdHJ1ZTtcblxuIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuIFx0XHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG4gXHR9XG5cblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuXG4gXHQvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9uIGZvciBoYXJtb255IGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uZCA9IGZ1bmN0aW9uKGV4cG9ydHMsIG5hbWUsIGdldHRlcikge1xuIFx0XHRpZighX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIG5hbWUpKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIG5hbWUsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBnZXR0ZXIgfSk7XG4gXHRcdH1cbiBcdH07XG5cbiBcdC8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uciA9IGZ1bmN0aW9uKGV4cG9ydHMpIHtcbiBcdFx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG4gXHRcdH1cbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiBcdH07XG5cbiBcdC8vIGNyZWF0ZSBhIGZha2UgbmFtZXNwYWNlIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDE6IHZhbHVlIGlzIGEgbW9kdWxlIGlkLCByZXF1aXJlIGl0XG4gXHQvLyBtb2RlICYgMjogbWVyZ2UgYWxsIHByb3BlcnRpZXMgb2YgdmFsdWUgaW50byB0aGUgbnNcbiBcdC8vIG1vZGUgJiA0OiByZXR1cm4gdmFsdWUgd2hlbiBhbHJlYWR5IG5zIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDh8MTogYmVoYXZlIGxpa2UgcmVxdWlyZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy50ID0gZnVuY3Rpb24odmFsdWUsIG1vZGUpIHtcbiBcdFx0aWYobW9kZSAmIDEpIHZhbHVlID0gX193ZWJwYWNrX3JlcXVpcmVfXyh2YWx1ZSk7XG4gXHRcdGlmKG1vZGUgJiA4KSByZXR1cm4gdmFsdWU7XG4gXHRcdGlmKChtb2RlICYgNCkgJiYgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJiB2YWx1ZSAmJiB2YWx1ZS5fX2VzTW9kdWxlKSByZXR1cm4gdmFsdWU7XG4gXHRcdHZhciBucyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18ucihucyk7XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShucywgJ2RlZmF1bHQnLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2YWx1ZSB9KTtcbiBcdFx0aWYobW9kZSAmIDIgJiYgdHlwZW9mIHZhbHVlICE9ICdzdHJpbmcnKSBmb3IodmFyIGtleSBpbiB2YWx1ZSkgX193ZWJwYWNrX3JlcXVpcmVfXy5kKG5zLCBrZXksIGZ1bmN0aW9uKGtleSkgeyByZXR1cm4gdmFsdWVba2V5XTsgfS5iaW5kKG51bGwsIGtleSkpO1xuIFx0XHRyZXR1cm4gbnM7XG4gXHR9O1xuXG4gXHQvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5uID0gZnVuY3Rpb24obW9kdWxlKSB7XG4gXHRcdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuIFx0XHRcdGZ1bmN0aW9uIGdldERlZmF1bHQoKSB7IHJldHVybiBtb2R1bGVbJ2RlZmF1bHQnXTsgfSA6XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0TW9kdWxlRXhwb3J0cygpIHsgcmV0dXJuIG1vZHVsZTsgfTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgJ2EnLCBnZXR0ZXIpO1xuIFx0XHRyZXR1cm4gZ2V0dGVyO1xuIFx0fTtcblxuIFx0Ly8gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSBmdW5jdGlvbihvYmplY3QsIHByb3BlcnR5KSB7IHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBwcm9wZXJ0eSk7IH07XG5cbiBcdC8vIF9fd2VicGFja19wdWJsaWNfcGF0aF9fXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBcIlwiO1xuXG5cbiBcdC8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xuIFx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18oX193ZWJwYWNrX3JlcXVpcmVfXy5zID0gMSk7XG4iLCJjb25zdCBnbG9iYWxPYmplY3QgPSAoZnVuY3Rpb24gKCkge1xyXG4gICAgLy8gdGhlIG9ubHkgcmVsaWFibGUgbWVhbnMgdG8gZ2V0IHRoZSBnbG9iYWwgb2JqZWN0IGlzXHJcbiAgICAvLyBgRnVuY3Rpb24oJ3JldHVybiB0aGlzJykoKWBcclxuICAgIC8vIEhvd2V2ZXIsIHRoaXMgY2F1c2VzIENTUCB2aW9sYXRpb25zIGluIENocm9tZSBhcHBzLlxyXG4gICAgaWYgKHR5cGVvZiBzZWxmICE9PSAndW5kZWZpbmVkJykge1xyXG4gICAgICAgIHJldHVybiBzZWxmO1xyXG4gICAgfVxyXG4gICAgaWYgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnKSB7XHJcbiAgICAgICAgcmV0dXJuIHdpbmRvdztcclxuICAgIH1cclxuICAgIGlmICh0eXBlb2YgZ2xvYmFsICE9PSAndW5kZWZpbmVkJykge1xyXG4gICAgICAgIHJldHVybiBnbG9iYWw7XHJcbiAgICB9XHJcbn0pKCk7XHJcbmV4cG9ydCBkZWZhdWx0IGdsb2JhbE9iamVjdDtcclxuIiwiaW1wb3J0IHsgQWdlbnQgfSBmcm9tICcuL2FnZW50JztcblxuY3VzdG9tRWxlbWVudHMuZGVmaW5lKCdtb2Rlcm4tYWdlbnQnLCBBZ2VudCk7XG5cbmV4cG9ydCBkZWZhdWx0IEFnZW50O1xuIiwiaW1wb3J0IHsgQWdlbnRDb25maWd1cmF0aW9uLCBGcmFtZUltYWdlcyB9IGZyb20gJ21vZGVybi1jbGlwcHknO1xuXG5pbXBvcnQgeyBhbmltYXRvciB9IGZyb20gJy4uLy4uL2NvbW1vbi9vdXRwdXQvZXNtL2FuaW1hdG9yJztcbmltcG9ydCBhdWRpbywgeyBTb3VuZEJvYXJkIH0gZnJvbSAnLi4vLi4vY29tbW9uL291dHB1dC9lc20vY29yZUF1ZGlvJztcbmltcG9ydCB7IGNob29zZVBvc2l0aW9uLCB0cmFuc2Zvcm1SZWxhdGl2ZVBvc2l0aW9uLCBEaWFsb2dQb3NpdGlvbiwgZ2V0UG9zaXRpb24sIFJlbGF0aXZlUG9zaXRpb24gfSBmcm9tICcuL2RpYWxvZyc7XG5pbXBvcnQgeyBsb2FkU3R5bGVzLCBsb2FkVGVtcGxhdGUgfSBmcm9tICcuL3RlbXBsYXRlJztcblxuZnVuY3Rpb24gY3NzUHgocG9zPzogbnVtYmVyKSB7XG5cdHJldHVybiBwb3MgIT0gbnVsbCA/IGAke3Bvc31weGAgOiBudWxsO1xufVxuXG5leHBvcnQgY2xhc3MgQWdlbnQgZXh0ZW5kcyBIVE1MRWxlbWVudCB7XG5cdHByaXZhdGUgX2NvbmZpZyE6IEFnZW50Q29uZmlndXJhdGlvbjtcblx0cHJpdmF0ZSBfY29udHJvbD86IFJldHVyblR5cGU8dHlwZW9mIGFuaW1hdG9yPiAmIHsgYWN0aW9uOiBzdHJpbmcgfTtcblx0cHJpdmF0ZSBfbXV0ZSA9IGZhbHNlO1xuXHRwcml2YXRlIF9zb3VuZEJvYXJkITogU291bmRCb2FyZDtcblxuXHRzdGF0aWMgZ2V0IG9ic2VydmVkQXR0cmlidXRlcygpIHtcblx0XHRyZXR1cm4gWydidW5kbGUnLCAnbXV0ZScsICdkaWFsb2cnXTtcblx0fVxuXG5cdGNvbnN0cnVjdG9yKCkge1xuXHRcdHN1cGVyKCk7XG5cblx0XHRjb25zdCBzaGFkb3cgPSB0aGlzLmF0dGFjaFNoYWRvdyh7IG1vZGU6ICdvcGVuJyB9KTtcblx0XHRzaGFkb3cuYXBwZW5kQ2hpbGQobG9hZFN0eWxlcygpKTtcblx0XHRzaGFkb3cuYXBwZW5kQ2hpbGQobG9hZFRlbXBsYXRlKCkpO1xuXG5cdFx0Y29uc3Qgc3BlZWNoU2xvdCA9IHRoaXMuX3NwZWVjaC5xdWVyeVNlbGVjdG9yKCdzbG90Jyk7XG5cdFx0c3BlZWNoU2xvdCAmJlxuXHRcdFx0c3BlZWNoU2xvdC5hZGRFdmVudExpc3RlbmVyKCdzbG90Y2hhbmdlJywgKGV2ZW50KSA9PiB7XG5cdFx0XHRcdHRoaXMuX29uU2xvdENoYW5nZShldmVudCk7XG5cdFx0XHR9KTtcblx0fVxuXG5cdGdldCBhY3Rpb25zKCk6IHN0cmluZ1tdIHtcblx0XHRyZXR1cm4gT2JqZWN0LmtleXModGhpcy5fY29uZmlnLmFuaW1hdGlvbnMpO1xuXHR9XG5cblx0Z2V0IGN1cnJlbnQoKTogc3RyaW5nIHwgdW5kZWZpbmVkIHtcblx0XHRyZXR1cm4gdGhpcy5fY29udHJvbCAmJiB0aGlzLl9jb250cm9sLmFjdGlvbjtcblx0fVxuXG5cdGF0dHJpYnV0ZUNoYW5nZWRDYWxsYmFjayhuYW1lOiBzdHJpbmcsIF9vbGRWYWx1ZTogc3RyaW5nLCBuZXdWYWx1ZTogc3RyaW5nKSB7XG5cdFx0c3dpdGNoIChuYW1lKSB7XG5cdFx0XHRjYXNlICdidW5kbGUnOlxuXHRcdFx0XHR0aGlzLmxvYWQobmV3VmFsdWUpO1xuXHRcdFx0XHRicmVhaztcblx0XHRcdGNhc2UgJ211dGUnOlxuXHRcdFx0XHR0aGlzLl9tdXRlID0gbmV3VmFsdWUgPT09ICd0cnVlJztcblx0XHRcdFx0YnJlYWs7XG5cdFx0XHRjYXNlICdkaWFsb2cnOlxuXHRcdFx0XHRjb25zdCBwbGFjZW1lbnQgPSBuZXdWYWx1ZSA/IHRyYW5zZm9ybVJlbGF0aXZlUG9zaXRpb24obmV3VmFsdWUuc3BsaXQoJywnKSkgOiB1bmRlZmluZWQ7XG5cdFx0XHRcdHRoaXMuX3JlZnJlc2hEaWFsb2dQbGFjZW1lbnQocGxhY2VtZW50KTtcblx0XHRcdFx0YnJlYWs7XG5cdFx0fVxuXHR9XG5cblx0YXN5bmMgbG9hZChjb25maWc6IEFnZW50Q29uZmlndXJhdGlvbiB8IHN0cmluZykge1xuXHRcdGlmICh0eXBlb2YgY29uZmlnID09PSAnc3RyaW5nJykge1xuXHRcdFx0Y29uc29sZS5sb2coYGxvYWRpbmcgJHtjb25maWd9IGJ1bmRsZWApO1xuXHRcdFx0Y29uc3QgcmVzdWx0ID0gYXdhaXQgZmV0Y2goY29uZmlnKTtcblx0XHRcdGNvbmZpZyA9IChhd2FpdCByZXN1bHQuanNvbigpKSBhcyBBZ2VudENvbmZpZ3VyYXRpb247XG5cdFx0fVxuXHRcdGlmIChjb25maWcubGljZW5zZSkge1xuXHRcdFx0Y29uc29sZS5sb2coJz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Jyk7XG5cdFx0XHRjb25zb2xlLmxvZygnQlVORExFIExJQ0VOU0UnKTtcblx0XHRcdGNvbnNvbGUubG9nKGNvbmZpZy5saWNlbnNlKTtcblx0XHRcdGNvbnNvbGUubG9nKCc9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PScpO1xuXHRcdH1cblx0XHR0aGlzLl9jb25maWcgPSBjb25maWc7XG5cdFx0d2hpbGUgKHRoaXMuX292ZXJsYXlzLmZpcnN0Q2hpbGQpIHtcblx0XHRcdHRoaXMuX292ZXJsYXlzLnJlbW92ZUNoaWxkKHRoaXMuX292ZXJsYXlzLmZpcnN0Q2hpbGQpO1xuXHRcdH1cblx0XHRmb3IgKGxldCBpID0gY29uZmlnLm92ZXJsYXlDb3VudDsgaSA+IDA7IGktLSkge1xuXHRcdFx0dGhpcy5fY3JlYXRlT3ZlcmxheSgpO1xuXHRcdH1cblx0XHR0aGlzLl9vdmVybGF5cy5zdHlsZS5oZWlnaHQgPSBjc3NQeChjb25maWcuZnJhbWVTaXplLmhlaWdodCk7XG5cdFx0dGhpcy5fb3ZlcmxheXMuc3R5bGUud2lkdGggPSBjc3NQeChjb25maWcuZnJhbWVTaXplLndpZHRoKTtcblx0XHR0aGlzLnJlc2V0RGlhbG9nUG9zaXRpb24oKTtcblx0XHR0aGlzLl9zb3VuZEJvYXJkID0gYXdhaXQgYXVkaW8ubG9hZChjb25maWcuc291bmRQYWNrKTtcblx0XHR0aGlzLnBsYXkoJ1Nob3cnKTtcblx0XHR0aGlzLmRpc3BhdGNoRXZlbnQobmV3IEN1c3RvbUV2ZW50KCdsb2FkZWQnKSk7XG5cdH1cblxuXHRwbGF5KGFjdGlvbjogc3RyaW5nKSB7XG5cdFx0Y29uc3QgYW5pbWF0aW9uID0gdGhpcy5fY29uZmlnLmFuaW1hdGlvbnNbYWN0aW9uXTtcblx0XHRpZiAoIWFuaW1hdGlvbikge1xuXHRcdFx0dGhyb3cgbmV3IEVycm9yKGBBY3Rpb24gJHthY3Rpb259IGRvZXMgbm90IGV4aXN0YCk7XG5cdFx0fVxuXHRcdHRoaXMuX2NvbnRyb2wgJiYgdGhpcy5fY29udHJvbC5zdG9wSW1tZWRpYXRlbHkoKTtcblx0XHR0aGlzLmRpc3BhdGNoRXZlbnQoXG5cdFx0XHRuZXcgQ3VzdG9tRXZlbnQoJ2FjdGlvblN0YXJ0Jywge1xuXHRcdFx0XHRkZXRhaWw6IHsgYWN0aW9uIH1cblx0XHRcdH0pXG5cdFx0KTtcblx0XHRsZXQgdGltZSA9IDA7XG5cdFx0dGhpcy5fY29udHJvbCA9IHtcblx0XHRcdGFjdGlvbixcblx0XHRcdC4uLmFuaW1hdG9yKGFuaW1hdGlvbiwgKGZyYW1lKSA9PiB7XG5cdFx0XHRcdGNvbnN0IHsgaW1hZ2VzID0gW10gfSA9IGZyYW1lO1xuXHRcdFx0XHR0aGlzLl9zZXRGcmFtZXMoaW1hZ2VzKTtcblx0XHRcdFx0Zm9yIChsZXQgaSA9IGltYWdlcy5sZW5ndGg7IGkgPCB0aGlzLl9jb25maWcub3ZlcmxheUNvdW50OyBpKyspIHtcblx0XHRcdFx0XHR0aGlzLl9oaWRlRnJhbWUoaSk7XG5cdFx0XHRcdH1cblx0XHRcdFx0aWYgKCF0aGlzLl9tdXRlICYmIGZyYW1lLnNvdW5kKSB7XG5cdFx0XHRcdFx0dGhpcy5fc291bmRCb2FyZC5wbGF5KFN0cmluZyhmcmFtZS5zb3VuZCkpO1xuXHRcdFx0XHR9XG5cdFx0XHRcdHRoaXMuZGlzcGF0Y2hFdmVudChcblx0XHRcdFx0XHRuZXcgQ3VzdG9tRXZlbnQoJ2ZyYW1lJywge1xuXHRcdFx0XHRcdFx0ZGV0YWlsOiB7IGFjdGlvbiwgZnJhbWUsIHRpbWUgfVxuXHRcdFx0XHRcdH0pXG5cdFx0XHRcdCk7XG5cdFx0XHRcdHRpbWUgKz0gZnJhbWUuZHVyYXRpb247XG5cdFx0XHR9KVxuXHRcdH07XG5cdFx0dGhpcy5fY29udHJvbC5kb25lLmZpbmFsbHkoKCkgPT4ge1xuXHRcdFx0dGhpcy5kaXNwYXRjaEV2ZW50KFxuXHRcdFx0XHRuZXcgQ3VzdG9tRXZlbnQoJ2FjdGlvbkVuZCcsIHtcblx0XHRcdFx0XHRkZXRhaWw6IHsgYWN0aW9uIH1cblx0XHRcdFx0fSlcblx0XHRcdCk7XG5cdFx0XHR0aGlzLl9jb250cm9sID0gdW5kZWZpbmVkO1xuXHRcdH0pO1xuXHRcdHJldHVybiB0aGlzLl9jb250cm9sO1xuXHR9XG5cblx0cGxheUlkbGUoKSB7XG5cdFx0Y29uc3QgaWRsZUFjdGlvbnMgPSB0aGlzLmFjdGlvbnMuZmlsdGVyKChhY3Rpb24pID0+IGFjdGlvbi5zdWJzdHIoMCwgNCkgPT09ICdJZGxlJyk7XG5cdFx0dGhpcy5wbGF5KGlkbGVBY3Rpb25zW01hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIGlkbGVBY3Rpb25zLmxlbmd0aCldKTtcblx0fVxuXG5cdHJlc2V0RGlhbG9nUG9zaXRpb24oKSB7XG5cdFx0Y29uc3QgYXR0cmlidXRlVmFsdWUgPSB0aGlzLmdldEF0dHJpYnV0ZSgnZGlhbG9nJyk7XG5cdFx0Y29uc3QgcGxhY2VtZW50ID0gKGF0dHJpYnV0ZVZhbHVlICYmIHRyYW5zZm9ybVJlbGF0aXZlUG9zaXRpb24oYXR0cmlidXRlVmFsdWUuc3BsaXQoJywnKSkpIHx8IHVuZGVmaW5lZDtcblx0XHR0aGlzLl9yZWZyZXNoRGlhbG9nUGxhY2VtZW50KHBsYWNlbWVudCk7XG5cdH1cblxuXHRzdG9wKCkge1xuXHRcdHRoaXMuX2NvbnRyb2wgJiYgdGhpcy5fY29udHJvbC5zdG9wKCk7XG5cdH1cblxuXHRzdG9wSW1tZWRpYXRlbHkoKSB7XG5cdFx0dGhpcy5fY29udHJvbCAmJiB0aGlzLl9jb250cm9sLnN0b3BJbW1lZGlhdGVseSgpO1xuXHR9XG5cblx0cHJpdmF0ZSBnZXQgX292ZXJsYXlzKCk6IEhUTUxFbGVtZW50IHtcblx0XHRyZXR1cm4gdGhpcy5zaGFkb3dSb290IS5xdWVyeVNlbGVjdG9yKCcjb3ZlcmxheXMnKSBhcyBIVE1MRWxlbWVudDtcblx0fVxuXG5cdHByaXZhdGUgZ2V0IF9zcGVlY2goKTogSFRNTEVsZW1lbnQge1xuXHRcdHJldHVybiB0aGlzLnNoYWRvd1Jvb3QhLnF1ZXJ5U2VsZWN0b3IoJyNzcGVlY2gnKSBhcyBIVE1MRWxlbWVudDtcblx0fVxuXG5cdHByaXZhdGUgX2NyZWF0ZU92ZXJsYXkoKSB7XG5cdFx0Y29uc3Qge1xuXHRcdFx0Y2hhcmFjdGVyTWFwLFxuXHRcdFx0ZnJhbWVTaXplOiB7IHdpZHRoLCBoZWlnaHQgfVxuXHRcdH0gPSB0aGlzLl9jb25maWc7XG5cdFx0Y29uc3Qgb3ZlcmxheSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuXHRcdG92ZXJsYXkuc3R5bGUud2lkdGggPSBjc3NQeCh3aWR0aCk7XG5cdFx0b3ZlcmxheS5zdHlsZS5oZWlnaHQgPSBjc3NQeChoZWlnaHQpO1xuXHRcdG92ZXJsYXkuc3R5bGUuYmFja2dyb3VuZEltYWdlID0gYHVybCgke2NoYXJhY3Rlck1hcH0pYDtcblx0XHRvdmVybGF5LnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG5cdFx0dGhpcy5fb3ZlcmxheXMuYXBwZW5kQ2hpbGQob3ZlcmxheSk7XG5cdH1cblxuXHRwcml2YXRlIF9oaWRlRnJhbWUob3ZlcmxheTogbnVtYmVyID0gMCkge1xuXHRcdGNvbnN0IG5vZGUgPSB0aGlzLl9vdmVybGF5cy5jaGlsZHJlbltvdmVybGF5XSBhcyBIVE1MRWxlbWVudDtcblx0XHRub2RlICYmIChub2RlLnN0eWxlLmRpc3BsYXkgPSAnbm9uZScpO1xuXHR9XG5cblx0cHJpdmF0ZSBfb25TbG90Q2hhbmdlKGV2ZW50OiBFdmVudCkge1xuXHRcdGNvbnN0IHNsb3QgPSBldmVudC50YXJnZXQgYXMgSFRNTFNsb3RFbGVtZW50O1xuXHRcdHRoaXMuX3NwZWVjaC5zdHlsZS52aXNpYmlsaXR5ID0gc2xvdC5hc3NpZ25lZEVsZW1lbnRzKCkubGVuZ3RoID8gJ3Zpc2libGUnIDogJ2hpZGRlbic7XG5cdH1cblxuXHRwcml2YXRlIF9yZWZyZXNoRGlhbG9nUGxhY2VtZW50KHBsYWNlbWVudD86IFJlbGF0aXZlUG9zaXRpb25bXSkge1xuXHRcdGNvbnN0IGRpYWxvZyA9IHRoaXMuX3NwZWVjaDtcblx0XHRjb25zdCBkaWFsb2dTcGFjZSA9IHsgaGVpZ2h0OiBkaWFsb2cuY2xpZW50SGVpZ2h0IHx8IDEwMCwgd2lkdGg6IGRpYWxvZy5jbGllbnRXaWR0aCB8fCAxMDAgfTtcblx0XHRjb25zdCByZWxhdGl2ZSA9XG5cdFx0XHRwbGFjZW1lbnQgJiYgcGxhY2VtZW50Lmxlbmd0aFxuXHRcdFx0XHQ/IGNob29zZVBvc2l0aW9uKHRoaXMsIGRpYWxvZ1NwYWNlLCBwbGFjZW1lbnQpIHx8IHBsYWNlbWVudFswXVxuXHRcdFx0XHQ6IGNob29zZVBvc2l0aW9uKHRoaXMsIGRpYWxvZ1NwYWNlKSB8fCAndG9wJztcblx0XHRjb25zdCBwb3NpdGlvbiA9IGdldFBvc2l0aW9uKHJlbGF0aXZlLCB0aGlzLl9jb25maWcuZnJhbWVTaXplKTtcblx0XHR0aGlzLl9zZXREaWFsb2dQb3NpdGlvbihwb3NpdGlvbik7XG5cdH1cblxuXHRwcml2YXRlIF9zZXREaWFsb2dQb3NpdGlvbihwb3NpdGlvbjogRGlhbG9nUG9zaXRpb24pIHtcblx0XHRjb25zdCBzcGVlY2ggPSB0aGlzLl9zcGVlY2g7XG5cdFx0c3BlZWNoLmNsYXNzTGlzdC5yZW1vdmUoJ2xlZnQnLCAncmlnaHQnLCAndG9wJywgJ2JvdHRvbScpO1xuXHRcdHNwZWVjaC5jbGFzc0xpc3QuYWRkKHBvc2l0aW9uLnBsYWNlbWVudCk7XG5cdFx0c3BlZWNoLnN0eWxlLnRvcCA9IGNzc1B4KHBvc2l0aW9uLnRvcCk7XG5cdFx0c3BlZWNoLnN0eWxlLmJvdHRvbSA9IGNzc1B4KHBvc2l0aW9uLmJvdHRvbSk7XG5cdFx0c3BlZWNoLnN0eWxlLmxlZnQgPSBjc3NQeChwb3NpdGlvbi5sZWZ0KTtcblx0XHRzcGVlY2guc3R5bGUucmlnaHQgPSBjc3NQeChwb3NpdGlvbi5yaWdodCk7XG5cdH1cblxuXHRwcml2YXRlIF9zZXRGcmFtZSh4OiBudW1iZXIsIHk6IG51bWJlciwgb3ZlcmxheTogbnVtYmVyID0gMCkge1xuXHRcdGNvbnN0IHsgd2lkdGgsIGhlaWdodCB9ID0gdGhpcy5fY29uZmlnLmZyYW1lU2l6ZTtcblx0XHRjb25zdCBub2RlID0gdGhpcy5fb3ZlcmxheXMuY2hpbGRyZW5bb3ZlcmxheV0gYXMgSFRNTEVsZW1lbnQ7XG5cdFx0aWYgKHggJSB3aWR0aCAhPT0gMCB8fCB5ICUgaGVpZ2h0ICE9PSAwKSB7XG5cdFx0XHRjb25zb2xlLndhcm4oYGZyYW1lICR7eH0sJHt5fSBpcyBub3QgYSBtdWx0aXBsZSBvZiBmcmFtZSBzaXplICR7d2lkdGh9LCR7aGVpZ2h0fWApO1xuXHRcdH1cblx0XHRpZiAoIW5vZGUpIHtcblx0XHRcdHRocm93IG5ldyBFcnJvcihgTWlzc2luZyBvdmVybGF5ICR7b3ZlcmxheX1gKTtcblx0XHR9XG5cblx0XHRub2RlLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xuXHRcdG5vZGUuc3R5bGUuYmFja2dyb3VuZFBvc2l0aW9uWCA9IGNzc1B4KC14KTtcblx0XHRub2RlLnN0eWxlLmJhY2tncm91bmRQb3NpdGlvblkgPSBjc3NQeCgteSk7XG5cdFx0bm9kZS5zdHlsZS5wb3NpdGlvbiA9ICdhYnNvbHV0ZSc7XG5cdFx0bm9kZS5zdHlsZS50b3AgPSAnMCc7XG5cdFx0bm9kZS5zdHlsZS5sZWZ0ID0gJzAnO1xuXHR9XG5cblx0cHJpdmF0ZSBfc2V0RnJhbWVzKGltYWdlczogRnJhbWVJbWFnZXMpIHtcblx0XHRpZiAoaW1hZ2VzKSB7XG5cdFx0XHRmb3IgKGxldCBpID0gMDsgaSA8IGltYWdlcy5sZW5ndGg7IGkrKykge1xuXHRcdFx0XHRjb25zdCBbeCwgeV0gPSBpbWFnZXNbaV07XG5cdFx0XHRcdHRoaXMuX3NldEZyYW1lKHgsIHksIGkpO1xuXHRcdFx0fVxuXHRcdH1cblx0fVxufVxuIiwidmFyIF9fYXdhaXRlciA9ICh0aGlzICYmIHRoaXMuX19hd2FpdGVyKSB8fCBmdW5jdGlvbiAodGhpc0FyZywgX2FyZ3VtZW50cywgUCwgZ2VuZXJhdG9yKSB7XHJcbiAgICByZXR1cm4gbmV3IChQIHx8IChQID0gUHJvbWlzZSkpKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcclxuICAgICAgICBmdW5jdGlvbiBmdWxmaWxsZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3IubmV4dCh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XHJcbiAgICAgICAgZnVuY3Rpb24gcmVqZWN0ZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3JbXCJ0aHJvd1wiXSh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XHJcbiAgICAgICAgZnVuY3Rpb24gc3RlcChyZXN1bHQpIHsgcmVzdWx0LmRvbmUgPyByZXNvbHZlKHJlc3VsdC52YWx1ZSkgOiBuZXcgUChmdW5jdGlvbiAocmVzb2x2ZSkgeyByZXNvbHZlKHJlc3VsdC52YWx1ZSk7IH0pLnRoZW4oZnVsZmlsbGVkLCByZWplY3RlZCk7IH1cclxuICAgICAgICBzdGVwKChnZW5lcmF0b3IgPSBnZW5lcmF0b3IuYXBwbHkodGhpc0FyZywgX2FyZ3VtZW50cyB8fCBbXSkpLm5leHQoKSk7XHJcbiAgICB9KTtcclxufTtcclxuaW1wb3J0IGdsb2JhbCBmcm9tICcuL3V0aWwvZ2xvYmFsJztcclxuY29uc3QgQXVkaW9Db250ZXh0ID0gZ2xvYmFsLkF1ZGlvQ29udGV4dCB8fCBnbG9iYWwud2Via2l0QXVkaW9Db250ZXh0O1xyXG5jb25zdCBtaW1lTWFwID0gbmV3IE1hcChbWydtcDMnLCAnYXVkaW8vbXBlZyddLCBbJ29nZycsICdhdWRpby9vZ2cnXV0pO1xyXG5jb25zdCBhdWRpb1RhZyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2F1ZGlvJyk7XHJcbmV4cG9ydCBjbGFzcyBTb3VuZEJvYXJkIHtcclxuICAgIGNvbnN0cnVjdG9yKGNvbnRleHQsIGVmZmVjdHMpIHtcclxuICAgICAgICB0aGlzLmNvbnRleHQgPSBjb250ZXh0O1xyXG4gICAgICAgIHRoaXMuZWZmZWN0cyA9IGVmZmVjdHM7XHJcbiAgICB9XHJcbiAgICBwbGF5KG5hbWUpIHtcclxuICAgICAgICBjb25zdCBidWZmZXIgPSB0aGlzLmVmZmVjdHNbbmFtZV07XHJcbiAgICAgICAgaWYgKGJ1ZmZlcikge1xyXG4gICAgICAgICAgICBpZiAodGhpcy5jb250ZXh0LnN0YXRlID09PSAnc3VzcGVuZGVkJykge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5jb250ZXh0LnJlc3VtZSgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGNvbnN0IHNvdXJjZSA9IHRoaXMuY29udGV4dC5jcmVhdGVCdWZmZXJTb3VyY2UoKTtcclxuICAgICAgICAgICAgc291cmNlLmJ1ZmZlciA9IGJ1ZmZlcjtcclxuICAgICAgICAgICAgc291cmNlLmNvbm5lY3QodGhpcy5jb250ZXh0LmRlc3RpbmF0aW9uKTtcclxuICAgICAgICAgICAgc291cmNlLnN0YXJ0KCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICBjb25zb2xlLndhcm4oYFNvdW5kYm9hcmQgbWlzc2luZyBlZmZlY3QgZm9yICR7bmFtZX1gKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuZXhwb3J0IGNsYXNzIENvcmVBdWRpbyB7XHJcbiAgICBjb25zdHJ1Y3Rvcihjb250ZXh0ID0gbmV3IEF1ZGlvQ29udGV4dCgpKSB7XHJcbiAgICAgICAgdGhpcy5jb250ZXh0ID0gY29udGV4dDtcclxuICAgIH1cclxuICAgIGdldCBzdXNwZW5kZWQoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuY29udGV4dC5zdGF0ZSA9PT0gJ3N1c3BlbmRlZCc7XHJcbiAgICB9XHJcbiAgICByZXN1bWUoKSB7XHJcbiAgICAgICAgdGhpcy5jb250ZXh0LnJlc3VtZSgpO1xyXG4gICAgfVxyXG4gICAgbG9hZChjb25maWcpIHtcclxuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xyXG4gICAgICAgICAgICBjb25zdCBlZmZlY3RzID0ge307XHJcbiAgICAgICAgICAgIE9iamVjdC5rZXlzKGNvbmZpZykuZm9yRWFjaCgodHlwZSkgPT4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xyXG4gICAgICAgICAgICAgICAgY29uc3QgcGFjayA9IGNvbmZpZ1t0eXBlXTtcclxuICAgICAgICAgICAgICAgIGlmICh0aGlzLmNhblBsYXkodHlwZSkpIHtcclxuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnbG9hZGluZyAnICsgdHlwZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgeWllbGQgdGhpcy5sb2FkU291bmRQYWNrKGVmZmVjdHMsIHBhY2spO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KSk7XHJcbiAgICAgICAgICAgIHJldHVybiBuZXcgU291bmRCb2FyZCh0aGlzLmNvbnRleHQsIGVmZmVjdHMpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgbG9hZFNvdW5kKHNyYykge1xyXG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IGRhdGEgPSB5aWVsZCBmZXRjaChzcmMpO1xyXG4gICAgICAgICAgICBjb25zdCBidWZmZXIgPSB5aWVsZCBkYXRhLmFycmF5QnVmZmVyKCk7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmNvbnRleHQuZGVjb2RlQXVkaW9EYXRhKGJ1ZmZlcik7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICBjYW5QbGF5KGZvcm1hdCkge1xyXG4gICAgICAgIGNvbnN0IG1pbWV0eXBlID0gbWltZU1hcC5nZXQoZm9ybWF0KSB8fCBmb3JtYXQ7XHJcbiAgICAgICAgcmV0dXJuIGF1ZGlvVGFnLmNhblBsYXlUeXBlKG1pbWV0eXBlKTtcclxuICAgIH1cclxuICAgIGxvYWRTb3VuZFBhY2soZWZmZWN0cywgcGFjaykge1xyXG4gICAgICAgIHJldHVybiBQcm9taXNlLmFsbChPYmplY3Qua2V5cyhwYWNrKS5tYXAoKGlkKSA9PiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XHJcbiAgICAgICAgICAgIGlmICghZWZmZWN0c1tpZF0pIHtcclxuICAgICAgICAgICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgICAgICAgICAgZWZmZWN0c1tpZF0gPSB5aWVsZCB0aGlzLmxvYWRTb3VuZChwYWNrW2lkXSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBjYXRjaCAoZSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUud2FybihgZmFpbGVkIHRvIGxvYWQgYXVkaW8gJHtpZH1gKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pKSk7XHJcbiAgICB9XHJcbn1cclxuZXhwb3J0IGRlZmF1bHQgbmV3IENvcmVBdWRpbygpO1xyXG4iLCJ2YXIgZztcblxuLy8gVGhpcyB3b3JrcyBpbiBub24tc3RyaWN0IG1vZGVcbmcgPSAoZnVuY3Rpb24oKSB7XG5cdHJldHVybiB0aGlzO1xufSkoKTtcblxudHJ5IHtcblx0Ly8gVGhpcyB3b3JrcyBpZiBldmFsIGlzIGFsbG93ZWQgKHNlZSBDU1ApXG5cdGcgPSBnIHx8IG5ldyBGdW5jdGlvbihcInJldHVybiB0aGlzXCIpKCk7XG59IGNhdGNoIChlKSB7XG5cdC8vIFRoaXMgd29ya3MgaWYgdGhlIHdpbmRvdyByZWZlcmVuY2UgaXMgYXZhaWxhYmxlXG5cdGlmICh0eXBlb2Ygd2luZG93ID09PSBcIm9iamVjdFwiKSBnID0gd2luZG93O1xufVxuXG4vLyBnIGNhbiBzdGlsbCBiZSB1bmRlZmluZWQsIGJ1dCBub3RoaW5nIHRvIGRvIGFib3V0IGl0Li4uXG4vLyBXZSByZXR1cm4gdW5kZWZpbmVkLCBpbnN0ZWFkIG9mIG5vdGhpbmcgaGVyZSwgc28gaXQnc1xuLy8gZWFzaWVyIHRvIGhhbmRsZSB0aGlzIGNhc2UuIGlmKCFnbG9iYWwpIHsgLi4ufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGc7XG4iLCJpbXBvcnQgeyBGcmFtZVNpemUgfSBmcm9tICdtb2Rlcm4tY2xpcHB5JztcblxuZXhwb3J0IHR5cGUgUmVsYXRpdmVQb3NpdGlvbiA9ICdsZWZ0JyB8ICdyaWdodCcgfCAndG9wJyB8ICdib3R0b20nO1xuZXhwb3J0IGludGVyZmFjZSBTcGFjZSB7XG5cdHRvcDogbnVtYmVyO1xuXHRib3R0b206IG51bWJlcjtcblx0bGVmdDogbnVtYmVyO1xuXHRyaWdodDogbnVtYmVyO1xufVxuZXhwb3J0IGludGVyZmFjZSBEaWFsb2dQb3NpdGlvbiBleHRlbmRzIFBhcnRpYWw8U3BhY2U+IHtcblx0cGxhY2VtZW50OiBSZWxhdGl2ZVBvc2l0aW9uO1xufVxuZXhwb3J0IHR5cGUgUGxhY2VtZW50ID0gUmVsYXRpdmVQb3NpdGlvbiB8ICdzaWRlJyB8ICdob3Jpem9udGFsJyB8ICd2ZXJ0aWNhbCc7XG5leHBvcnQgaW50ZXJmYWNlIERpbWVuc2lvbiB7XG5cdHdpZHRoOiBudW1iZXI7XG5cdGhlaWdodDogbnVtYmVyO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaXNSZWxhdGl2ZVBvc2l0aW9uKHZhbHVlOiBzdHJpbmcpOiB2YWx1ZSBpcyBSZWxhdGl2ZVBvc2l0aW9uIHtcblx0cmV0dXJuIHZhbHVlID09PSAnbGVmdCcgfHwgdmFsdWUgPT09ICdyaWdodCcgfHwgdmFsdWUgPT09ICd0b3AnIHx8IHZhbHVlID09PSAnYm90dG9tJztcbn1cblxuZnVuY3Rpb24gY2FsY3VsYXRlQXZhaWxhYmxlU3BhY2Uobm9kZTogSFRNTEVsZW1lbnQpOiBTcGFjZSB7XG5cdGNvbnN0IGdlb21ldHJ5ID0gbm9kZS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcblx0Y29uc3Qgc2NyZWVuID0geyBoZWlnaHQ6IHdpbmRvdy5pbm5lckhlaWdodCwgd2lkdGg6IHdpbmRvdy5pbm5lcldpZHRoIH07XG5cblx0cmV0dXJuIHtcblx0XHR0b3A6IGdlb21ldHJ5LnRvcCxcblx0XHRsZWZ0OiBnZW9tZXRyeS5sZWZ0LFxuXHRcdHJpZ2h0OiBzY3JlZW4ud2lkdGggLSBnZW9tZXRyeS5yaWdodCxcblx0XHRib3R0b206IHNjcmVlbi5oZWlnaHQgLSBnZW9tZXRyeS5ib3R0b21cblx0fTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHRyYW5zZm9ybVJlbGF0aXZlUG9zaXRpb24ocGxhY2VtZW50OiBzdHJpbmdbXSk6IFJlbGF0aXZlUG9zaXRpb25bXSB7XG5cdHJldHVybiBwbGFjZW1lbnQucmVkdWNlPFJlbGF0aXZlUG9zaXRpb25bXT4oKGxpc3QsIHZhbHVlKSA9PiB7XG5cdFx0aWYgKGlzUmVsYXRpdmVQb3NpdGlvbih2YWx1ZSkpIHtcblx0XHRcdGxpc3QucHVzaCh2YWx1ZSk7XG5cdFx0fSBlbHNlIGlmICh2YWx1ZSA9PT0gJ3ZlcnRpY2FsJykge1xuXHRcdFx0bGlzdC5wdXNoKCd0b3AnKTtcblx0XHRcdGxpc3QucHVzaCgnYm90dG9tJyk7XG5cdFx0fSBlbHNlIGlmICh2YWx1ZSA9PT0gJ2hvcml6b250YWwnIHx8IHZhbHVlID09PSAnc2lkZScpIHtcblx0XHRcdGxpc3QucHVzaCgnbGVmdCcpO1xuXHRcdFx0bGlzdC5wdXNoKCdyaWdodCcpO1xuXHRcdH1cblx0XHRyZXR1cm4gbGlzdDtcblx0fSwgW10pO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gY2hvb3NlUG9zaXRpb24oXG5cdG5vZGU6IEhUTUxFbGVtZW50LFxuXHRkaWFsb2dTcGFjZTogRGltZW5zaW9uLFxuXHRwcmVmZXJlbmNlczogUmVsYXRpdmVQb3NpdGlvbltdID0gWydsZWZ0JywgJ3JpZ2h0JywgJ3RvcCcsICdib3R0b20nXVxuKTogUmVsYXRpdmVQb3NpdGlvbiB8IHVuZGVmaW5lZCB7XG5cdGNvbnN0IHsgaGVpZ2h0LCB3aWR0aCB9ID0gZGlhbG9nU3BhY2U7XG5cdGNvbnN0IHNwYWNlID0gY2FsY3VsYXRlQXZhaWxhYmxlU3BhY2Uobm9kZSk7XG5cdGNvbnN0IHBvc2l0aW9uID0gdHJhbnNmb3JtUmVsYXRpdmVQb3NpdGlvbihwcmVmZXJlbmNlcyk7XG5cdGZvciAobGV0IHBsYWNlbWVudCBvZiBwb3NpdGlvbikge1xuXHRcdHN3aXRjaCAocGxhY2VtZW50KSB7XG5cdFx0XHRjYXNlICd0b3AnOlxuXHRcdFx0XHRpZiAoc3BhY2UudG9wID4gaGVpZ2h0KSB7XG5cdFx0XHRcdFx0cmV0dXJuICd0b3AnO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0Y2FzZSAnYm90dG9tJzpcblx0XHRcdFx0aWYgKHNwYWNlLmJvdHRvbSA+IGhlaWdodCkge1xuXHRcdFx0XHRcdHJldHVybiAnYm90dG9tJztcblx0XHRcdFx0fVxuXHRcdFx0XHRicmVhaztcblx0XHRcdGNhc2UgJ2xlZnQnOlxuXHRcdFx0XHRpZiAoc3BhY2UubGVmdCA+IHdpZHRoKSB7XG5cdFx0XHRcdFx0cmV0dXJuICdsZWZ0Jztcblx0XHRcdFx0fVxuXHRcdFx0XHRicmVhaztcblx0XHRcdGNhc2UgJ3JpZ2h0Jzpcblx0XHRcdFx0aWYgKHNwYWNlLnJpZ2h0ID4gd2lkdGgpIHtcblx0XHRcdFx0XHRyZXR1cm4gJ3JpZ2h0Jztcblx0XHRcdFx0fVxuXHRcdFx0XHRicmVhaztcblx0XHR9XG5cdH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldFBvc2l0aW9uKHBvczogUmVsYXRpdmVQb3NpdGlvbiwgYWdlbnREaW1lbnNpb25zOiBGcmFtZVNpemUpOiBEaWFsb2dQb3NpdGlvbiB7XG5cdHN3aXRjaCAocG9zKSB7XG5cdFx0Y2FzZSAncmlnaHQnOlxuXHRcdFx0cmV0dXJuIGNhbGN1bGF0ZVJpZ2h0KGFnZW50RGltZW5zaW9ucyk7XG5cdFx0Y2FzZSAnYm90dG9tJzpcblx0XHRcdHJldHVybiBjYWxjdWxhdGVCb3R0b20oYWdlbnREaW1lbnNpb25zKTtcblx0XHRjYXNlICd0b3AnOlxuXHRcdFx0cmV0dXJuIGNhbGN1bGF0ZVRvcChhZ2VudERpbWVuc2lvbnMpO1xuXHRcdGRlZmF1bHQ6XG5cdFx0XHRyZXR1cm4gY2FsY3VsYXRlTGVmdChhZ2VudERpbWVuc2lvbnMpO1xuXHR9XG59XG5cbmZ1bmN0aW9uIGNhbGN1bGF0ZUxlZnQoYWdlbnREaW1lbnNpb25zOiBGcmFtZVNpemUpOiBEaWFsb2dQb3NpdGlvbiB7XG5cdHJldHVybiB7IHBsYWNlbWVudDogJ2xlZnQnLCB0b3A6IDAsIHJpZ2h0OiBNYXRoLmZsb29yKDAuNzUgKiBhZ2VudERpbWVuc2lvbnMud2lkdGgpIH07XG59XG5cbmZ1bmN0aW9uIGNhbGN1bGF0ZVJpZ2h0KGFnZW50RGltZW5zaW9uczogRnJhbWVTaXplKTogRGlhbG9nUG9zaXRpb24ge1xuXHRyZXR1cm4geyBwbGFjZW1lbnQ6ICdyaWdodCcsIHRvcDogMCwgbGVmdDogTWF0aC5mbG9vcigwLjc1ICogYWdlbnREaW1lbnNpb25zLndpZHRoKSB9O1xufVxuXG5mdW5jdGlvbiBjYWxjdWxhdGVUb3AoYWdlbnREaW1lbnNpb25zOiBGcmFtZVNpemUpOiBEaWFsb2dQb3NpdGlvbiB7XG5cdHJldHVybiB7IHBsYWNlbWVudDogJ3RvcCcsIGJvdHRvbTogTWF0aC5mbG9vcigwLjc1ICogYWdlbnREaW1lbnNpb25zLmhlaWdodCkgfTtcbn1cblxuZnVuY3Rpb24gY2FsY3VsYXRlQm90dG9tKGFnZW50RGltZW5zaW9uczogRnJhbWVTaXplKTogRGlhbG9nUG9zaXRpb24ge1xuXHRyZXR1cm4geyBwbGFjZW1lbnQ6ICdib3R0b20nLCB0b3A6IE1hdGguZmxvb3IoYWdlbnREaW1lbnNpb25zLmhlaWdodCkgfTtcbn1cbiIsImNvbnN0IGFnZW50U3R5bGU6IHN0cmluZyA9IHJlcXVpcmUoJy4vYWdlbnQuY3NzJykuZGVmYXVsdDtcbmNvbnN0IHRlbXBsYXRlU3RyaW5nOiBzdHJpbmcgPSByZXF1aXJlKCcuL2FnZW50Lmh0bWwnKTtcblxuZnVuY3Rpb24gdGhyb3dJZk51bGw8VCA9IGFueT4odmFsdWU6IFQgfCBudWxsIHwgdW5kZWZpbmVkLCBtZXNzYWdlOiBzdHJpbmcpOiBUIHtcblx0aWYgKHZhbHVlID09IG51bGwpIHtcblx0XHR0aHJvdyBuZXcgRXJyb3IobWVzc2FnZSk7XG5cdH1cblx0cmV0dXJuIHZhbHVlO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gbG9hZFRlbXBsYXRlKCkge1xuXHRjb25zdCB0ZW1wbGF0ZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3RlbXBsYXRlJyk7XG5cdHRlbXBsYXRlLmlubmVySFRNTCA9IHRlbXBsYXRlU3RyaW5nO1xuXHRjb25zdCByb290ID0gdGVtcGxhdGUuY29udGVudC5jbG9uZU5vZGUodHJ1ZSkgYXMgSFRNTEVsZW1lbnQ7XG5cblx0dGhyb3dJZk51bGwocm9vdC5xdWVyeVNlbGVjdG9yKCcjb3ZlcmxheXMnKSwgJ21pc3Npbmcgb3ZlcmxheSBjb250YWluZXInKTtcblx0dGhyb3dJZk51bGwocm9vdC5xdWVyeVNlbGVjdG9yKCcjc3BlZWNoJyksICdtaXNzaW5nIHNwZWVjaCBjb250YWluZXInKTtcblx0dGhyb3dJZk51bGwocm9vdC5xdWVyeVNlbGVjdG9yKCdzbG90JyksICdtaXNzaW5nIHNsb3QnKTtcblx0cmV0dXJuIHJvb3Q7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBsb2FkU3R5bGVzKCkge1xuXHRjb25zdCBzdHlsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3N0eWxlJyk7XG5cdHN0eWxlLnRleHRDb250ZW50ID0gYWdlbnRTdHlsZTtcblx0cmV0dXJuIHN0eWxlO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgXCI6aG9zdCB7XFxuXFx0LS1iZy1jb2xvcjogI0ZGQztcXG5cXHQtLWJvcmRlci1jb2xvcjogYmxhY2s7XFxuXFx0LS10ZXh0LWNvbG9yOiAjMzMzO1xcblxcdC0tdHJpYW5nbGUtaGVpZ2h0OiAxM3B4O1xcblxcdC0tdHJpYW5nbGUtYmFzZTogMjZweDtcXG5cXHQtLXRyaWFuZ2xlLXBsYWNlbWVudDogNDBweDtcXG5cXHQtLXRyaWFuZ2xlLXZlcnRpY2FsLXBsYWNlbWVudDogMTBweDtcXG5cXHQtLXRyaWFuZ2xlLWJvcmRlcjogMXB4O1xcblxcdC0tc3BlZWNoLW1pbi13aWR0aDogNDBweDtcXG5cXHQtLXNwZWVjaC1taW4taGVpZ2h0OiA0MHB4O1xcblxcdC0tc3BlZWNoLXdpZHRoOiBhdXRvO1xcbn1cXG5cXG4ucm9vdCB7XFxuXFx0cG9zaXRpb246IHJlbGF0aXZlO1xcbn1cXG5cXG4jb3ZlcmxheXMge1xcblxcdHBvc2l0aW9uOiByZWxhdGl2ZTtcXG59XFxuXFxuI292ZXJsYXlzID4gKiB7XFxuXFx0cG9zaXRpb246IGFic29sdXRlO1xcblxcdHRvcDogMDtcXG5cXHRsZWZ0OiAwO1xcbn1cXG5cXG4vKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cXG4gKiBTUEVFQ0ggQlVCQkxFXFxuKi9cXG5cXG4jc3BlZWNoIHtcXG5cXHR2aXNpYmlsaXR5OiBoaWRkZW47XFxuXFx0cG9zaXRpb246IGFic29sdXRlO1xcblxcdGRpc3BsYXk6IGJsb2NrO1xcblxcdHotaW5kZXg6IDEwMDA7XFxuXFx0bWluLXdpZHRoOiB2YXIoLS1zcGVlY2gtbWluLXdpZHRoKTtcXG5cXHRtaW4taGVpZ2h0OiB2YXIoLS1zcGVlY2gtbWluLWhlaWdodCk7XFxuXFx0d2lkdGg6IHZhcigtLXNwZWVjaC13aWR0aCk7XFxufVxcblxcbi5idWJibGUge1xcblxcdHBvc2l0aW9uOiByZWxhdGl2ZTtcXG5cXHRwYWRkaW5nOiAxNXB4O1xcblxcdG1hcmdpbjogMWVtIDAgM2VtO1xcblxcdGJvcmRlcjogdmFyKC0tdHJpYW5nbGUtYm9yZGVyKSBzb2xpZCB2YXIoLS1ib3JkZXItY29sb3IpO1xcblxcdGNvbG9yOiB2YXIoLS10ZXh0LWNvbG9yKTtcXG5cXHRiYWNrZ3JvdW5kOiB2YXIoLS1iZy1jb2xvcik7XFxuXFx0Ym9yZGVyLXJhZGl1czogMTBweDtcXG59XFxuXFxuLyogVE9QIERJQUxPRyAoYm90dG9tIHRyaWFuZ2xlKSAqL1xcblxcbi8qIG91dGVyIHRyaWFuZ2xlIGJvcmRlciAqL1xcbi50b3AuYnViYmxlOmJlZm9yZSB7XFxuXFx0Y29udGVudDogXFxcIlxcXCI7XFxuXFx0cG9zaXRpb246IGFic29sdXRlO1xcblxcdGJvdHRvbTogY2FsYygtMSAqICh2YXIoLS10cmlhbmdsZS1oZWlnaHQpICsgdmFyKC0tdHJpYW5nbGUtYm9yZGVyKSkpO1xcblxcdGxlZnQ6IHZhcigtLXRyaWFuZ2xlLXBsYWNlbWVudCk7XFxuXFx0Ym9yZGVyLXdpZHRoOiBjYWxjKHZhcigtLXRyaWFuZ2xlLWhlaWdodCkgKyB2YXIoLS10cmlhbmdsZS1ib3JkZXIpKSBjYWxjKHZhcigtLXRyaWFuZ2xlLWJvcmRlcikgKyB2YXIoLS10cmlhbmdsZS1iYXNlKSAvIDIpIDA7XFxuXFx0Ym9yZGVyLXN0eWxlOiBzb2xpZDtcXG5cXHRib3JkZXItY29sb3I6IHZhcigtLWJvcmRlci1jb2xvcikgdHJhbnNwYXJlbnQ7XFxufVxcblxcbi8qIGNyZWF0ZXMgdGhlIHNtYWxsZXIgdHJpYW5nbGUgKi9cXG4udG9wLmJ1YmJsZTphZnRlciB7XFxuXFx0Y29udGVudDogXFxcIlxcXCI7XFxuXFx0cG9zaXRpb246IGFic29sdXRlO1xcblxcdGJvdHRvbTogY2FsYygtMSAqIHZhcigtLXRyaWFuZ2xlLWhlaWdodCkpO1xcblxcdGxlZnQ6IGNhbGModmFyKC0tdHJpYW5nbGUtcGxhY2VtZW50KSArIHZhcigtLXRyaWFuZ2xlLWJvcmRlcikpO1xcblxcdGJvcmRlci13aWR0aDogdmFyKC0tdHJpYW5nbGUtaGVpZ2h0KSBjYWxjKHZhcigtLXRyaWFuZ2xlLWJhc2UpIC8gMikgMDtcXG5cXHRib3JkZXItc3R5bGU6IHNvbGlkO1xcblxcdGJvcmRlci1jb2xvcjogdmFyKC0tYmctY29sb3IpIHRyYW5zcGFyZW50O1xcbn1cXG5cXG4vKiBSSUdIVCBESUFMT0cgKGxlZnQgdHJpYW5nbGUpICovXFxuXFxuLnJpZ2h0LmJ1YmJsZTpiZWZvcmUge1xcblxcdGNvbnRlbnQ6IFxcXCJcXFwiO1xcblxcdHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG5cXHR0b3A6IHZhcigtLXRyaWFuZ2xlLXZlcnRpY2FsLXBsYWNlbWVudCk7XFxuXFx0bGVmdDogY2FsYygtMSAqICh2YXIoLS10cmlhbmdsZS1oZWlnaHQpICsgdmFyKC0tdHJpYW5nbGUtYm9yZGVyKSkpO1xcblxcdGJvcmRlci13aWR0aDogY2FsYyh2YXIoLS10cmlhbmdsZS1ib3JkZXIpICsgdmFyKC0tdHJpYW5nbGUtYmFzZSkgLyAyKSBjYWxjKHZhcigtLXRyaWFuZ2xlLWhlaWdodCkgKyB2YXIoLS10cmlhbmdsZS1ib3JkZXIpKSBjYWxjKHZhcigtLXRyaWFuZ2xlLWJvcmRlcikgKyB2YXIoLS10cmlhbmdsZS1iYXNlKSAvIDIpIDA7XFxuXFx0Ym9yZGVyLXN0eWxlOiBzb2xpZDtcXG5cXHRib3JkZXItY29sb3I6IHRyYW5zcGFyZW50IHZhcigtLWJvcmRlci1jb2xvcikgdHJhbnNwYXJlbnQ7XFxufVxcblxcbi5yaWdodC5idWJibGU6YWZ0ZXIge1xcblxcdGNvbnRlbnQ6IFxcXCJcXFwiO1xcblxcdHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG5cXHR0b3A6IGNhbGModmFyKC0tdHJpYW5nbGUtdmVydGljYWwtcGxhY2VtZW50KSArIHZhcigtLXRyaWFuZ2xlLWJvcmRlcikpO1xcblxcdGxlZnQ6IGNhbGMoLTEgKiB2YXIoLS10cmlhbmdsZS1oZWlnaHQpKTtcXG5cXHRib3JkZXItd2lkdGg6IDUwcHggMTQ1cHggNTBweCAwO1xcblxcdGJvcmRlci13aWR0aDogY2FsYyh2YXIoLS10cmlhbmdsZS1iYXNlKSAvIDIpIHZhcigtLXRyaWFuZ2xlLWhlaWdodCkgY2FsYyh2YXIoLS10cmlhbmdsZS1iYXNlKSAvIDIpIDA7XFxuXFx0Ym9yZGVyLXN0eWxlOiBzb2xpZDtcXG5cXHRib3JkZXItY29sb3I6IHRyYW5zcGFyZW50IHZhcigtLWJnLWNvbG9yKSB0cmFuc3BhcmVudDtcXG59XFxuXFxuLyogTEVGVCBESUFMT0cgKHJpZ2h0IHRyaWFuZ2xlKSAqL1xcblxcbi5sZWZ0LmJ1YmJsZTpiZWZvcmUge1xcblxcdGNvbnRlbnQ6IFxcXCJcXFwiO1xcblxcdHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG5cXHR0b3A6IHZhcigtLXRyaWFuZ2xlLXZlcnRpY2FsLXBsYWNlbWVudCk7XFxuXFx0cmlnaHQ6IGNhbGMoLTEgKiAodmFyKC0tdHJpYW5nbGUtaGVpZ2h0KSArIHZhcigtLXRyaWFuZ2xlLWJvcmRlcikpKTtcXG5cXHRib3JkZXItd2lkdGg6IGNhbGModmFyKC0tdHJpYW5nbGUtYm9yZGVyKSArIHZhcigtLXRyaWFuZ2xlLWJhc2UpIC8gMikgMCBjYWxjKHZhcigtLXRyaWFuZ2xlLWJvcmRlcikgKyB2YXIoLS10cmlhbmdsZS1iYXNlKSAvIDIpIGNhbGModmFyKC0tdHJpYW5nbGUtaGVpZ2h0KSArIHZhcigtLXRyaWFuZ2xlLWJvcmRlcikpO1xcblxcdGJvcmRlci1zdHlsZTogc29saWQ7XFxuXFx0Ym9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudCB2YXIoLS1ib3JkZXItY29sb3IpIHRyYW5zcGFyZW50O1xcbn1cXG5cXG4ubGVmdC5idWJibGU6YWZ0ZXIge1xcblxcdGNvbnRlbnQ6IFxcXCJcXFwiO1xcblxcdHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG5cXHR0b3A6IGNhbGModmFyKC0tdHJpYW5nbGUtdmVydGljYWwtcGxhY2VtZW50KSArIHZhcigtLXRyaWFuZ2xlLWJvcmRlcikpO1xcblxcdHJpZ2h0OiBjYWxjKC0xICogdmFyKC0tdHJpYW5nbGUtaGVpZ2h0KSk7XFxuXFx0Ym9yZGVyLXdpZHRoOiA1MHB4IDE0NXB4IDUwcHggMDtcXG5cXHRib3JkZXItd2lkdGg6IGNhbGModmFyKC0tdHJpYW5nbGUtYmFzZSkgLyAyKSAwIGNhbGModmFyKC0tdHJpYW5nbGUtYmFzZSkgLyAyKSB2YXIoLS10cmlhbmdsZS1oZWlnaHQpO1xcblxcdGJvcmRlci1zdHlsZTogc29saWQ7XFxuXFx0Ym9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudCB2YXIoLS1iZy1jb2xvcikgdHJhbnNwYXJlbnQ7XFxufVxcblxcbi8qIEJPVFRPTSBESUFMT0cgKHRvcCB0cmlhbmdsZSkgKi9cXG5cXG4vKiBvdXRlciB0cmlhbmdsZSBib3JkZXIgKi9cXG4uYm90dG9tLmJ1YmJsZTpiZWZvcmUge1xcblxcdGNvbnRlbnQ6IFxcXCJcXFwiO1xcblxcdHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG5cXHR0b3A6IGNhbGMoLTEgKiAodmFyKC0tdHJpYW5nbGUtaGVpZ2h0KSArIHZhcigtLXRyaWFuZ2xlLWJvcmRlcikpKTtcXG5cXHRsZWZ0OiB2YXIoLS10cmlhbmdsZS1wbGFjZW1lbnQpO1xcblxcdGJvcmRlci13aWR0aDogMCBjYWxjKHZhcigtLXRyaWFuZ2xlLWJvcmRlcikgKyB2YXIoLS10cmlhbmdsZS1iYXNlKSAvIDIpIGNhbGModmFyKC0tdHJpYW5nbGUtaGVpZ2h0KSArIHZhcigtLXRyaWFuZ2xlLWJvcmRlcikpO1xcblxcdGJvcmRlci1zdHlsZTogc29saWQ7XFxuXFx0Ym9yZGVyLWNvbG9yOiB2YXIoLS1ib3JkZXItY29sb3IpIHRyYW5zcGFyZW50O1xcbn1cXG5cXG4vKiBjcmVhdGVzIHRoZSBzbWFsbGVyIHRyaWFuZ2xlICovXFxuLmJvdHRvbS5idWJibGU6YWZ0ZXIge1xcblxcdGNvbnRlbnQ6IFxcXCJcXFwiO1xcblxcdHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG5cXHR0b3A6IGNhbGMoLTEgKiB2YXIoLS10cmlhbmdsZS1oZWlnaHQpKTtcXG5cXHRsZWZ0OiBjYWxjKHZhcigtLXRyaWFuZ2xlLXBsYWNlbWVudCkgKyB2YXIoLS10cmlhbmdsZS1ib3JkZXIpKTtcXG5cXHRib3JkZXItd2lkdGg6IDAgY2FsYyh2YXIoLS10cmlhbmdsZS1iYXNlKSAvIDIpIHZhcigtLXRyaWFuZ2xlLWhlaWdodCk7XFxuXFx0Ym9yZGVyLXN0eWxlOiBzb2xpZDtcXG5cXHRib3JkZXItY29sb3I6IHZhcigtLWJnLWNvbG9yKSB0cmFuc3BhcmVudDtcXG59XFxuXCIiLCJtb2R1bGUuZXhwb3J0cyA9IFwiPGRpdiBjbGFzcz1yb290PiA8ZGl2IGlkPXNwZWVjaCBjbGFzcz1cXFwiYnViYmxlIGxlZnRcXFwiPiA8c2xvdCBuYW1lPVxcXCJcXFwiPiA8L3Nsb3Q+IDwvZGl2PiA8ZGl2IGlkPW92ZXJsYXlzPiA8L2Rpdj4gPC9kaXY+IFwiOyIsImV4cG9ydCBmdW5jdGlvbiBzbGVlcChtaWxsaXNlY29uZHMpIHtcclxuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4ge1xyXG4gICAgICAgIHNldFRpbWVvdXQocmVzb2x2ZSwgbWlsbGlzZWNvbmRzKTtcclxuICAgIH0pO1xyXG59XHJcbiIsInZhciBfX2F3YWl0ZXIgPSAodGhpcyAmJiB0aGlzLl9fYXdhaXRlcikgfHwgZnVuY3Rpb24gKHRoaXNBcmcsIF9hcmd1bWVudHMsIFAsIGdlbmVyYXRvcikge1xyXG4gICAgcmV0dXJuIG5ldyAoUCB8fCAoUCA9IFByb21pc2UpKShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XHJcbiAgICAgICAgZnVuY3Rpb24gZnVsZmlsbGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yLm5leHQodmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxyXG4gICAgICAgIGZ1bmN0aW9uIHJlamVjdGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yW1widGhyb3dcIl0odmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxyXG4gICAgICAgIGZ1bmN0aW9uIHN0ZXAocmVzdWx0KSB7IHJlc3VsdC5kb25lID8gcmVzb2x2ZShyZXN1bHQudmFsdWUpIDogbmV3IFAoZnVuY3Rpb24gKHJlc29sdmUpIHsgcmVzb2x2ZShyZXN1bHQudmFsdWUpOyB9KS50aGVuKGZ1bGZpbGxlZCwgcmVqZWN0ZWQpOyB9XHJcbiAgICAgICAgc3RlcCgoZ2VuZXJhdG9yID0gZ2VuZXJhdG9yLmFwcGx5KHRoaXNBcmcsIF9hcmd1bWVudHMgfHwgW10pKS5uZXh0KCkpO1xyXG4gICAgfSk7XHJcbn07XHJcbmltcG9ydCB7IHNsZWVwIH0gZnJvbSAnLi91dGlsL3NsZWVwJztcclxuZnVuY3Rpb24gcGlja1JhbmRvbShicmFuY2hlcykge1xyXG4gICAgbGV0IHBpY2sgPSBNYXRoLnJhbmRvbSgpICogMTAwO1xyXG4gICAgZm9yIChjb25zdCBicmFuY2ggb2YgYnJhbmNoZXMpIHtcclxuICAgICAgICBwaWNrIC09IGJyYW5jaC53ZWlnaHQ7XHJcbiAgICAgICAgaWYgKHBpY2sgPD0gMCkge1xyXG4gICAgICAgICAgICByZXR1cm4gYnJhbmNoLmZyYW1lSW5kZXg7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbmV4cG9ydCBmdW5jdGlvbiogc3RlcHBlcihhbmltYXRpb24pIHtcclxuICAgIGxldCBvZmZzZXQgPSAwO1xyXG4gICAgbGV0IGZyYW1lcyA9IGFuaW1hdGlvbi5mcmFtZXM7XHJcbiAgICBsZXQgZXhpdCA9IGZhbHNlO1xyXG4gICAgd2hpbGUgKG9mZnNldCA8IGZyYW1lcy5sZW5ndGgpIHtcclxuICAgICAgICBsZXQgZnJhbWUgPSBmcmFtZXNbb2Zmc2V0XTtcclxuICAgICAgICBleGl0ID0gISEoeWllbGQgZnJhbWUpIHx8IGV4aXQ7XHJcbiAgICAgICAgaWYgKGV4aXQgJiYgZnJhbWUuZXhpdEJyYW5jaCkge1xyXG4gICAgICAgICAgICBvZmZzZXQgPSBmcmFtZS5leGl0QnJhbmNoO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIGlmIChmcmFtZS5icmFuY2hpbmcpIHtcclxuICAgICAgICAgICAgb2Zmc2V0ID0gcGlja1JhbmRvbShmcmFtZS5icmFuY2hpbmcuYnJhbmNoZXMpIHx8IG9mZnNldCArIDE7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICBvZmZzZXQrKztcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuZXhwb3J0IGZ1bmN0aW9uIGFuaW1hdG9yKGFuaW1hdGlvbiwgZnJhbWVDYWxsYmFjaykge1xyXG4gICAgY29uc3QgaXRlcmF0b3IgPSBzdGVwcGVyKGFuaW1hdGlvbik7XHJcbiAgICBsZXQgZXhpdCA9IGZhbHNlO1xyXG4gICAgbGV0IGltbWVkaWF0ZSA9IGZhbHNlO1xyXG4gICAgbGV0IGNhbGxJbW1lZGlhdGU7XHJcbiAgICBjb25zdCBkb25lID0gUHJvbWlzZS5yYWNlKFtcclxuICAgICAgICAoKCkgPT4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xyXG4gICAgICAgICAgICBmb3IgKGxldCB7IGRvbmUsIHZhbHVlOiBmcmFtZSB9ID0gaXRlcmF0b3IubmV4dChleGl0KTsgIWltbWVkaWF0ZSAmJiAhZG9uZTsgeyBkb25lLCB2YWx1ZTogZnJhbWUgfSA9IGl0ZXJhdG9yLm5leHQoZXhpdCkpIHtcclxuICAgICAgICAgICAgICAgIGZyYW1lQ2FsbGJhY2soZnJhbWUpO1xyXG4gICAgICAgICAgICAgICAgeWllbGQgc2xlZXAoZnJhbWUuZHVyYXRpb24pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSkpKCksXHJcbiAgICAgICAgbmV3IFByb21pc2UoKHJlc3VsdCkgPT4ge1xyXG4gICAgICAgICAgICBjYWxsSW1tZWRpYXRlID0gcmVzdWx0O1xyXG4gICAgICAgIH0pXHJcbiAgICBdKTtcclxuICAgIHJldHVybiB7XHJcbiAgICAgICAgZG9uZSxcclxuICAgICAgICBzdG9wKCkge1xyXG4gICAgICAgICAgICBleGl0ID0gdHJ1ZTtcclxuICAgICAgICAgICAgcmV0dXJuIGRvbmU7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBzdG9wSW1tZWRpYXRlbHkoKSB7XHJcbiAgICAgICAgICAgIGltbWVkaWF0ZSA9IHRydWU7XHJcbiAgICAgICAgICAgIGNhbGxJbW1lZGlhdGUoKTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0=